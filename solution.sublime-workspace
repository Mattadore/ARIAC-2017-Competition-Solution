{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"na",
				"names"
			],
			[
				"time",
				"time_from_start"
			],
			[
				"wait_",
				"wait_until_planned"
			],
			[
				"tr",
				"trajectory_end\tint trajectory_end"
			],
			[
				"relat",
				"relative_motion\tint relative_motion"
			],
			[
				"node",
				"nodeptr"
			],
			[
				"ali",
				"align_action\tarm_action * align_action"
			],
			[
				"arm",
				"arm_trans\tint arm_trans"
			],
			[
				"St",
				"StampedTransform"
			],
			[
				"plan",
				"planning_status\tchar planning_status"
			],
			[
				"p",
				"plan\tint * plan"
			],
			[
				"add_",
				"add_action"
			],
			[
				"po",
				"points"
			],
			[
				"traj",
				"joint_trajectory"
			],
			[
				"wait_un",
				"wait_until_planned"
			],
			[
				"part_wa",
				"part_wait_rate"
			],
			[
				"to",
				"toSec\tdouble DurationBase<Duration>::toSec() const"
			],
			[
				"pl",
				"plan"
			],
			[
				"act",
				"action_name\tstd::string action_name"
			],
			[
				"trajecto",
				"trajectory_msgs\ttrajectory_msgs::"
			],
			[
				"movie",
				"moveit_msgs\tmoveit_msgs::"
			],
			[
				"w",
				"wait_until_executed"
			],
			[
				"gra",
				"grab_pose\ttf::Pose grab_pose"
			],
			[
				"get",
				"getOrigin\ttf::Vector3 & Transform::getOrigin()"
			],
			[
				"Stamped",
				"StampedTransform\tStampedTransform"
			],
			[
				"tf_",
				"tf_frequency"
			],
			[
				"cur",
				"current_transform"
			],
			[
				"Sam",
				"StampedTransform\tStampedTransform"
			],
			[
				"int",
				"inter_frame_time"
			],
			[
				"resul",
				"result_v\ttf::Vector3 result_v"
			],
			[
				"average_list_s",
				"average_list_size"
			],
			[
				"avera",
				"average_list_position_size"
			],
			[
				"av",
				"average_list_valid\tunsigned char average_list_valid"
			],
			[
				"get_cur",
				"get_current_location\ttf::StampedTransform get_current_location()"
			],
			[
				"ref",
				"reference_frame"
			],
			[
				"resu",
				"result_v\ttf::Vector3 result_v"
			],
			[
				"on",
				"on_exit\tint on_exit(void (*__func)(int, void *), void *__arg)"
			],
			[
				"obje",
				"object_true_location\ttf::Pose object_true_location"
			],
			[
				"obj",
				"object_true_location"
			],
			[
				"true_",
				"true_top_from_tf\tdouble true_top_from_tf"
			],
			[
				"offs",
				"offset_pose"
			],
			[
				"QU",
				"Quaternion\tQuaternion"
			],
			[
				"ge",
				"get_type_info\tObjectTypeData * get_type_info()"
			],
			[
				"ObJ",
				"ObjectTypeData\tObjectTypeData"
			],
			[
				"par",
				"part_to_grab\tObjectData & part_to_grab"
			],
			[
				"mi",
				"min\tconst _Tp & min(const _Tp &, const _Tp &)"
			],
			[
				"old",
				"old_vector"
			],
			[
				"g",
				"getZ\tconst tfScalar & getZ() const"
			],
			[
				"res",
				"result_v"
			],
			[
				"ave",
				"average_list_size\tunsigned char average_list_size"
			],
			[
				"aver",
				"average_list_valid"
			],
			[
				"Sta",
				"StampedTransform\tStampedTransform"
			],
			[
				"get_",
				"get_current_location"
			],
			[
				"look",
				"lookup_map"
			],
			[
				"ad",
				"advertise\tros::Publisher advertise<class M>(const std::string &topic, uint32_t queue_size)"
			],
			[
				"tra",
				"transforms"
			],
			[
				"tf2_",
				"tf2_msgs\ttf2_msgs::"
			],
			[
				"Obj",
				"ObjectTracker"
			],
			[
				"S",
				"StampedTransform"
			],
			[
				"pose",
				"poseStampedMsgToTF\tvoid poseStampedMsgToTF(const geometry_msgs::PoseStamped &msg, Stamped<Pose> &bt)"
			],
			[
				"type",
				"type_data"
			],
			[
				"max",
				"max_average_num"
			],
			[
				"cal",
				"calculate"
			],
			[
				"initia",
				"initialize_object_types"
			],
			[
				"Object",
				"ObjectTracker"
			],
			[
				"Ob",
				"ObjectTracker"
			],
			[
				"paren",
				"parent_action"
			],
			[
				"vector",
				"transform_from_vector"
			],
			[
				"chec",
				"check_order"
			],
			[
				"wait",
				"wait_for_move_complete"
			],
			[
				"tray_of",
				"tray_offset"
			],
			[
				"drop",
				"drop_offset"
			],
			[
				"arm_",
				"arm_process"
			],
			[
				"gene",
				"generate_intermediate"
			],
			[
				"V",
				"Vector3"
			],
			[
				"add_pl",
				"add_plans"
			],
			[
				"grab_o",
				"grab_offset"
			],
			[
				"ac",
				"action_name"
			],
			[
				"transform_",
				"transform_from_vector"
			],
			[
				"vacuu",
				"vacuum_gripper_link"
			],
			[
				"lis",
				"listener"
			],
			[
				"qual",
				"qual3a"
			],
			[
				"z_",
				"z_local"
			],
			[
				"loo",
				"lookupTransform"
			],
			[
				"kit_",
				"kit_tally"
			],
			[
				"recei",
				"received_orders"
			],
			[
				"off",
				"offset"
			],
			[
				"tat",
				"target"
			],
			[
				"targ",
				"target_transform"
			],
			[
				"Comp",
				"CompetitionManager"
			],
			[
				"currently",
				"currently_planning"
			],
			[
				"con",
				"controller"
			],
			[
				"vec",
				"Vector3"
			],
			[
				"star",
				"start_state"
			],
			[
				"INTE",
				"INTERMEDIATE_AGV_1"
			],
			[
				"INT",
				"INTERMEDIATE_BIN"
			],
			[
				"IN",
				"INTERMEDIATE_CONVEYOR"
			],
			[
				"I",
				"INTERMEDIATE_AGV_1"
			],
			[
				"curre",
				"current_location"
			],
			[
				"ARM_",
				"ARM_REGION_NUM"
			],
			[
				"AR",
				"ARM_REGION_NUM"
			],
			[
				"INTER",
				"INTERMEDIATE_AGV_2"
			],
			[
				"AGV_1",
				"AGV_1_PREDROP"
			],
			[
				"COMPE",
				"COMPETITION_READY"
			],
			[
				"end",
				"end_competition"
			],
			[
				"COM",
				"COMPETITION_STATE"
			],
			[
				"curren",
				"current_plan_"
			],
			[
				"height",
				"height_offset"
			],
			[
				"getRO",
				"getRobotModel"
			],
			[
				"waiti",
				"waiting_for"
			],
			[
				"gas",
				"gasket_part_1_frame"
			],
			[
				"tf",
				"tf_exists"
			],
			[
				"intermedi",
				"intermediate_pose"
			],
			[
				"basic",
				"basic_get_intermediate"
			],
			[
				"grasp",
				"grasp_offset"
			],
			[
				"pa",
				"parallel_logic"
			],
			[
				"toggle_",
				"toggle_vacuum"
			],
			[
				"current",
				"current_plan"
			],
			[
				"INTERMEDI",
				"INTERMEDIATE_AGV_1"
			],
			[
				"AGV_2_",
				"AGV_2_PREDROP"
			],
			[
				"nodep",
				"nodeptr"
			],
			[
				"agv_t",
				"AGV_topic"
			],
			[
				"set",
				"setEuler"
			],
			[
				"traje",
				"trajectoryEnd"
			],
			[
				"PI",
				"PIPELINE_NONE"
			],
			[
				"execution",
				"execution_status"
			],
			[
				"planing",
				"planning_status"
			],
			[
				"PIPE",
				"PIPELINE_PROCESSING"
			]
		]
	},
	"buffers":
	[
		{
			"file": "include/object_manager.h",
			"settings":
			{
				"buffer_size": 16851,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/solution_node.cpp",
			"settings":
			{
				"buffer_size": 48639,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/matt/ariac_ws/src/ariac/osrf_gear/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 9269,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 357.0,
		"last_filter": "packa",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"boxy",
				"Boxy Theme: Configuration"
			],
			[
				"easy",
				"EasyClangComplete: Clean current CMake cache"
			]
		],
		"width": 458.0
	},
	"console":
	{
		"height": 588.0,
		"history":
		[
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/matt/ariac_ws/src/competition_solution",
		"/home/matt/ariac_ws/src/competition_solution/config",
		"/home/matt/ariac_ws/src/competition_solution/include",
		"/home/matt/ariac_ws/src/competition_solution/launch",
		"/home/matt/ariac_ws/src/competition_solution/src"
	],
	"file_history":
	[
		"/home/matt/ariac_ws/src/competition_solution/package.xml",
		"/home/matt/ariac_ws/src/competition_solution/CMakeLists.txt",
		"/home/matt/Desktop/pseudocode",
		"/home/matt/ariac_ws/src/moveit_start",
		"/home/matt/ariac_ws/src/start_sim_qual2",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/qual2a.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/qual1a.yaml",
		"/opt/ros/indigo/share/moveit_msgs/msg/RobotTrajectory.msg",
		"/home/matt/ariac_ws/src/competition_solution/config/gear_configuration.yaml",
		"/home/matt/ariac_ws/src/static_info",
		"/home/matt/ariac_ws/src/competition_solution/src/solution_node.cpp",
		"/home/matt/ariac_ws/src/competition_solution/include/advanced_publisher.h",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/PopulationState.msg",
		"/home/matt/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/matt/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/PopulationPlugin.cc",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/include/osrf_gear/ARIAC.hh",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/script/gear.py",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/ROSPopulationPlugin.cc",
		"/home/matt/ariac_ws/src/competition_solution/src/advanced_publisher.cpp",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/models/part1_ariac/model.sdf",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/models/part1_ariac/model.config",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/models/part1_ariac/model.",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/qual3b.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/comp_conf2.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/sample_user_config.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/sample.yaml",
		"/home/matt/ariac_ws/src/qualifier2_actual/src/qual2_actual_node.cpp",
		"/home/matt/ariac_ws/src/competition_solution/include",
		"/home/matt/ariac_ws/src/competition_solution/src/qual2_node.cpp",
		"/home/matt/ariac_ws/src/competition_solution/src/CMakeLists.txt",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/part4/model.sdf",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/part4_ariac/model.sdf",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/part4_ariac/model.",
		"/home/matt/ariac_ws/src/qualifier2_solution/src/advanced_publisher.cpp",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/script/startup.sh",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/models/pulley_part_ariac/model.sdf",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/models/piston_rod_part_ariac/model.sdf",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/ROSAGVPlugin.cc",
		"/home/matt/ariac_ws/src/qualifier2_solution/config/gear_configuration.yaml",
		"/home/matt/ariac_ws/src/qualifier2_solution/src/qual2_node.cpp",
		"/home/matt/qual3_sub/b/log/performance.log",
		"/home/matt/ariac_ws/src/competition_example/config/sampe",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/qual3a.yaml",
		"/opt/ros/indigo/lib/python2.7/dist-packages/roslaunch/nodeprocess.py",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/gear_part/model.sdf",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/piston_rod_part/model.sdf",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/piston_rod_part_ariac/model.sdf",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/config/kinematics.yaml",
		"/home/matt/ariac_ws/src/nistinfo.txt",
		"/home/matt/ariac_ws/install/share/ur_gazebo/controller/arm_controller_ur10.yaml",
		"/home/matt/ariac_ws/install/share/osrf_gear/vendor/ur_description/urdf/ur10.urdf.xacro",
		"/home/matt/ariac_ws/install/share/osrf_gear/launch/ur10/ur10.urdf.xacro",
		"/home/matt/ariac_ws/src/start_sim2",
		"/home/matt/ariac_ws/src/qualifier2_solution/CMakeLists.txt",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/ROSAriacTaskManagerPlugin.cc",
		"/home/matt/ariac_ws/install/share/osrf_gear/launch/ur10/ur10.xml",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/launch/ur10_moveit_planning_execution.launch",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/launch/move_group.launch",
		"/home/matt/ariac_ws/install/share/ur_gazebo/launch/ur10.launch",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/config/joint_limits.yaml",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/config/ompl_planning.yaml",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/config/controllers.yaml",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/config/ur10.srdf",
		"/home/matt/ariac_ws/install/share/osrf_gear/vendor/ur_description/urdf/ur.transmission.xacro",
		"/tmp/ariac/gear.launch",
		"/tmp/ariac/gear.",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/worlds/gear.world.template",
		"/home/matt/ariac_ws/install/share/ur_gazebo/launch/ur10_joint_limited.launch",
		"/home/matt/ariac_ws/install/share/osrf_gear/models/piston_rod_part_ariac/model.config",
		"/home/matt/ariac_ws/src/qualifier2_actual/config/gear_configuration.yaml",
		"/home/matt/ariac_ws/install/share/osrf_gear/config/qual2a.yaml",
		"/home/matt/ariac_ws/install/share/osrf_gear/config/qual2b.yaml",
		"/home/matt/ariac_qual2/my_team.txt",
		"/home/matt/ariac_ws/src/gdb_competition",
		"/home/matt/ariac_ws/src/qualifier2_actual_solution/CMakeLists.txt",
		"/home/matt/ariac_ws/src/qualifier2_actual/scenes/ariac.scene",
		"/home/matt/.ariac/log/gazebo/state.log",
		"/home/matt/ariac_ws/src/start_sim_q",
		"/home/matt/ariac_ws/install/share/osrf_gear/config/drop_test.yaml",
		"/home/matt/ariac_ws/install/share/osrf_gear/config/comp_conf2.yaml",
		"/home/matt/ariac_ws/src/qualifier2_solution/package.xml",
		"/home/matt/ariac_ws/install/share/osrf_gear/config/qual1a.yaml",
		"/home/matt/ariac_ws/src/competition_example/src/competition_example_node.cpp",
		"/home/matt/ariac_ws/src/qualifier2_actual_solution/package.xml",
		"/home/matt/ariac_ws/src/qualifier2_actual_solution/Cm",
		"/home/matt/ariac_ws/src/ariac/ariac_example/src/ariac_example_node.cpp",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/include/osrf_gear/ROSVacuumGripperPlugin.hh",
		"/home/matt/ariac_ws/src/qualifier2_solution/include/controller.h",
		"/home/matt/Desktop/teststuff.txt",
		"/home/matt/ariac_ws/install/share/osrf_gear/config/comp_conf1.yaml",
		"/home/matt/.bashrc",
		"/home/matt/Desktop/notes.txt",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/VacuumGripperPlugin.cc",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/include/osrf_gear/VacuumGripperPlugin.hh",
		"/home/matt/ariac_ws/src/qualifier2_solution/src",
		"/home/matt/ariac_ws/src/competition_example/config/sample_gear_conf.yaml",
		"/home/matt/ariac_ws/src/qualifier2_solution/assets/ariac.scene",
		"/home/matt/ariac_ws/src/qualifier2_solution/scenes/ariac.scene",
		"/home/matt/ariac_ws/src/qualifier2_solution/config/sample_gear_conf.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/ROSVacuumGripperPlugin.cc",
		"/home/matt/ariac_ws/src/src/VacuumGripperPlugin.cc",
		"/home/matt/ariac_ws/src/src/ROSVacuumGripperPlugin.cc",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/AriacScorer.cpp",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/launch/moveit_rviz.launch",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/launch/moveit.rviz",
		"/home/matt/ariac_ws/src/competition_example/launch/default_launch.launch",
		"/home/matt/ariac_ws/src/start_sim",
		"/home/matt/ariac_ws/src/competition_example/package.xml",
		"/home/matt/ariac_ws/src/competition_example/CMakeLists.txt",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/comp_conf1.yaml",
		"/home/matt/ariac_ws/src/competition_example/launch/rosrun",
		"/home/matt/ariac_ws/install/share/ur10_moveit_config/launch/default_warehouse_db.launch",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/qual1b.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/src/ROSAriacKitTrayPlugin.cc",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/sr",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/Kit.msg",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/Order.msg",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/LogicalCameraImage.msg",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/sample_scenario3.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/KitObject.msg",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/KitTray.msg",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/include/ROSAriacKitTrayPlugin.hh",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/srv/VacuumGripperControl.srv",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/srv/SubmitTray.srv",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/msg/Kit",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/sample_scenario_drop.yaml",
		"/home/matt/ariac_ws/src/ariac/osrf_gear/config/sample_scenario1.yaml"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"generic_state",
			"start_state",
			"integrate",
			"keybo",
			"logic",
			"dummy_action",
			"new arm_action",
			"plan_b",
			"\\(temp",
			"joint_trajectory",
			"trajectory",
			"velocities",
			"velocity",
			"drop",
			"intermed",
			"intermediate",
			"at_time",
			"get_current_location",
			"now",
			"shared_ptr",
			"logic",
			"vacuum_gripp",
			"vacuum_gr",
			"wait",
			"get_grab_pose",
			"ros::duration",
			"start_state",
			"correlation",
			"integrate",
			"6.0",
			"add_actions",
			"add_action",
			"now*\\(",
			"grab",
			"velocity",
			"logic",
			"integrate",
			"make_movin",
			"grab",
			"wait_until",
			"_move",
			"move_",
			"thread",
			"JointTraject",
			"move",
			"boost::thread",
			"controller",
			"number_orders",
			"grab",
			"0,0,0",
			"}\n",
			"part",
			"enabled_end",
			"toggle_va",
			"toggle_vacu",
			"pulley",
			"0.2",
			"ros::duration",
			"ros::Du",
			"velocity",
			"grab",
			"toggle_v",
			"gripper",
			"vacuum_g",
			"PULL",
			"gea",
			"pulley_",
			"blocking_ca",
			"ObjectData",
			"get_current_lo",
			"current_trans",
			"lookup_map",
			"publish",
			"min",
			"\n\t\t\t",
			"result_v",
			"0.02",
			"handle_pose",
			"tf::Vector3\\(0,0,(0\\.\\d+)\\)",
			"move",
			"logic",
			"arm_action",
			"add_new_pose",
			"result_v",
			"max_aver",
			"get_current_",
			"publisher",
			"parent",
			"Time\\(",
			"\\(\\)\\(",
			"lookupTransform",
			"\\(\\)",
			"\\(\\)\\(\\)",
			"()()",
			"full_name",
			"reference_frame",
			"Vector3",
			"disk_part",
			"add_new",
			"tf_pu",
			"relative_tf",
			"TransformStamped",
			"stamped<tf::pose>",
			"\t\t\n",
			"install",
			"type_data",
			"clone",
			"start_competition",
			"nodeha",
			"subscribe",
			"modeltype",
			"clone",
			"public",
			"current_sc",
			"subscrib",
			"0.3",
			"subscriptions",
			"static",
			"subscr",
			"subscri",
			"object_output",
			"print",
			"xyz_start",
			"model_to_spawn_dic",
			"xyz_st",
			"default_bin_origin",
			"tf::",
			"drop"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"result_p",
			"handle_transform",
			"$1",
			"reference_frame",
			"StampedTransform",
			"TransformStamped",
			"nodeptr",
			"currently_executing",
			"execution",
			"\t",
			"control_thread",
			"control_queue",
			"move_queue",
			"action_queue",
			"",
			"subscribe($1, $2, &$3);",
			"subscribers[$1] = subscribe($1, $2, &$3);",
			"subscribers[$1] = subscribe($1 ,$2 ,&$3);",
			"subscribers[$1] = subscribe($1,$2,&$3);",
			"subscribers[$1] = subscribe($1,$2,$3);",
			"PULLUP_PLAN",
			"grab_frame_",
			"state_",
			"$1\t",
			"\t"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "include/object_manager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16851,
						"regions":
						{
						},
						"selection":
						[
							[
								14191,
								14191
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3949.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/solution_node.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 48639,
						"regions":
						{
						},
						"selection":
						[
							[
								18218,
								18218
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7347.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/matt/ariac_ws/src/ariac/osrf_gear/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9269,
						"regions":
						{
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 39.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.cc":
	{
		"height": 187.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 499.0
	},
	"pinned_build_system": "",
	"project": "solution.sublime-project",
	"replace":
	{
		"height": 90.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"solutionnn",
				"~/ariac_ws/src/competition_solution/src/solution_node.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 177.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
